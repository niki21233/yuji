--manga yuji
local player = game.Players.LocalPlayer
local char = player.Character
local Humanoid = char.Humanoid
local hot = player.PlayerGui:WaitForChild("Hotbar")
local hotbar = hot:WaitForChild("Backpack"):WaitForChild("Hotbar")
-- 14516273501

local function cloneToolName(slot, text)
    local toolName = slot.ToolName
    if not slot:FindFirstChild("SkibidiGame") then
        toolName.Visible = false
        local clone = toolName:Clone()
        clone.Name = "SkibidiGame"
        clone.Parent = slot
        clone.Text = text
        clone.Visible = true
    elseif slot:FindFirstChild("SkibidiGame") then
        if slot:FindFirstChild("SkibidiGame").Text ~= text then
            toolName.Visible = false
            slot:FindFirstChild("SkibidiGame").Text = text
        end
    end
end
-- 10470104242
local magichealth = player.PlayerGui:WaitForChild("ScreenGui"):WaitForChild("MagicHealth")
local UltLabel = player.PlayerGui:WaitForChild("ScreenGui"):WaitForChild("MagicHealth"):WaitForChild("TextLabel")
UltLabel.Visible = false
local UltLabel = UltLabel:Clone()
UltLabel.Visible = true
UltLabel.Name = "SkibidiRizzlerGyattOhio"
UltLabel.Parent = magichealth
task.spawn(function()
    while true do
     UltLabel.Text = "lost control"
        for _, slot in ipairs(hotbar:GetChildren()) do
            if slot:FindFirstChild("Base") and slot.Base:FindFirstChild("ToolName") then
                local toolNameText = slot.Base.ToolName.Text
                if toolNameText == "Flowing Water" then
                    cloneToolName(slot.Base, "manji barage")
                elseif toolNameText == "Lethal Whirlwind Stream" then
                    cloneToolName(slot.Base, "skull crusier")
                elseif toolNameText == "Hunter's Grasp" then
                    cloneToolName(slot.Base, "piercing blood")
                elseif toolNameText == "Prey's Peril" then
                    cloneToolName(slot.Base, "manji kick")
                elseif toolNameText == "Death Counter" then
                    cloneToolName(slot.Base, "true strength")
                elseif toolNameText == "Table Flip" then
                    cloneToolName(slot.Base, "dropkick")
                elseif toolNameText == "Serious Punch" then
                    cloneToolName(slot.Base, "bang")
                elseif toolNameText == "Omni Directional Punch" then
                    cloneToolName(slot.Base, "heveanly speed")
                end
            end
        end
        task.wait(1)
    end
end)
-- Create a ScreenGui
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "WatermarkGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create a TextLabel for the watermark
local watermarkLabel = Instance.new("TextLabel")
watermarkLabel.Name = "WatermarkLabel"
watermarkLabel.Text = "manga yuji by beluganiki on discord version 1"  -- Customize your watermark text here
watermarkLabel.Font = Enum.Font.SourceSans
watermarkLabel.TextSize = 24  -- Set the size of the text
watermarkLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White color
watermarkLabel.BackgroundTransparency = 1  -- Make the background transparent
watermarkLabel.Position = UDim2.new(0.5, 0, 0, 10)  -- Position it at the top center
watermarkLabel.AnchorPoint = Vector2.new(0.5, 0)  -- Center the anchor point horizontally
watermarkLabel.Parent = screenGui

-- Optional: Make the watermark slightly transparent
watermarkLabel.TextTransparency = 0.8  -- Adjust transparency if needed



--[[Animations]]

--[[move 1]]
local animationId = 12273188754

-- Get the local player
local player = game.Players.LocalPlayer

-- Wait for the player's character to load
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid object from the character
local humanoid = character:WaitForChild("Humanoid")

-- Function to handle when any animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the animation ID matches the one you're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create a new animation object with the new animation ID
        local newAnimation = Instance.new("Animation")
        newAnimation.AnimationId = "rbxassetid://18181589384"

        -- Load the animation into the humanoid
        local newAnimTrack = humanoid:LoadAnimation(newAnimation)

        -- Optional: Adjust the animation speed and start time
        local startTime = 0
        newAnimTrack:Play()
        newAnimTrack:AdjustSpeed(1)
        newAnimTrack.TimePosition = startTime

        -- Add particle effect from Sorcerer LimitlessBarrier
        local Test = game.ReplicatedStorage.Resources.Sorcerer.LimitlessBarrier["Core"].Appear
        local test = Test:Clone()
        test.Parent = character["HumanoidRootPart"]

        for _, child in ipairs(test:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child:Emit(15)
                child.Enabled = true
            end
        end

        -- Remove the cloned attachment after 3 seconds
        game:GetService("Debris"):AddItem(test, 2)
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--[[move 1 finesher]]

local animationId = 14374357351

-- Get the local player
local player = game.Players.LocalPlayer

-- Wait for the player's character to load
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid object from the character
local humanoid = character:WaitForChild("Humanoid")

-- Function to handle when any animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the animation ID matches the one you're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create a new animation object with the new animation ID
        local newAnimation = Instance.new("Animation")
        newAnimation.AnimationId = "rbxassetid://18464372850"

        -- Load the animation into the humanoid
        local newAnimTrack = humanoid:LoadAnimation(newAnimation)

        -- Optional: Adjust the animation speed and start time
        local startTime = 0
        newAnimTrack:Play()
        newAnimTrack:AdjustSpeed(1.3)
        newAnimTrack.TimePosition = startTime

        -- Add particle effect from Sorcerer LimitlessBarrier
        local Test = game.ReplicatedStorage.Resources.KJEffects.DropkickExtra["lastimpact"].Attachment
        local test = Test:Clone()
        test.Parent = character["HumanoidRootPart"]

        for _, child in ipairs(test:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child:Emit(15)
                child.Enabled = true
            end
        end

        -- Remove the cloned attachment after 3 seconds
        game:GetService("Debris"):AddItem(test, 2)
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[2 move]]
local animationId = 12296113986

-- Get the local player
local player = game.Players.LocalPlayer

-- Wait for the player's character to load
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid object from the character
local humanoid = character:WaitForChild("Humanoid")

-- Function to handle when any animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the animation ID matches the one you're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create a new animation object with the new animation ID
        local newAnimation = Instance.new("Animation")
        newAnimation.AnimationId = "rbxassetid://18464362124"

        -- Load the animation into the humanoid
        local newAnimTrack = humanoid:LoadAnimation(newAnimation)

        -- Play the animation
        newAnimTrack:Play()
        newAnimTrack:AdjustSpeed(2)

        -- Add particle effect and set color to light blue
        local effectTemplate = game.ReplicatedStorage.Resources.SunsetEffects["FlameWind"].AtomicWind.Windy
        local effectClone = effectTemplate:Clone()
        effectClone.Parent = character["HumanoidRootPart"]

        -- Customize particle effect color to light blue
        for _, child in ipairs(effectClone:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child.Color = ColorSequence.new(Color3.fromRGB(67, 164, 255)) -- Light blue
                child:Emit(15)
                child.Enabled = true
            end
        end

        -- Remove the cloned attachment after 3 seconds
        game:GetService("Debris"):AddItem(effectClone, 2)
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)








--[[3 move]]

local Players = game:GetService("Players")

-- Animation ID that triggers the random animations
local animationId = 12309835105

-- List of additional animation IDs to play randomly
local randomAnimationIds = {
    "rbxassetid://16584277208"
}

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Function to play a random animation from the list
local function playRandomAnimation()
    -- Stop all currently playing animations
    for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
        animTrack:Stop()
    end

    -- Select a random animation ID from the list
    local randomIndex = math.random(1, #randomAnimationIds)
    local randomAnimationId = randomAnimationIds[randomIndex]

    -- Load and play the selected random animation
    local animInstance = Instance.new("Animation")
    animInstance.AnimationId = randomAnimationId
    local animTrack = humanoid:LoadAnimation(animInstance)
    animTrack:Play()
    animTrack:AdjustSpeed(2)

    -- Add particle effect from FiveSeasonsFX
    local Test = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment
    local test = Test:Clone()
    test.Parent = character["HumanoidRootPart"]

    for _, child in ipairs(test:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child:Emit(15)
            child.Enabled = true
        end
    end

    -- Remove the cloned attachment after 3 seconds
    game:GetService("Debris"):AddItem(test, 1.5)
end

-- Function called when an animation is played
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        playRandomAnimation() -- Call to play a random animation and add particle effect
    end
end

-- Connect the AnimationPlayed event to the function
humanoid.AnimationPlayed:Connect(onAnimationPlayed)










--[[4 move]]


-- Define animation ID to listen for
local animationId = 12351854556

-- Get the player and their character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid from the character
local humanoid = character:WaitForChild("Humanoid")

-- Define the function that runs when an animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the played animation matches the desired animation ID
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Load a new animation
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://17464923657"
        local animTrack = humanoid:LoadAnimation(newAnim)

        -- Set the start time and adjust the speed
        local startTime = 1
        animTrack:Play()
        animTrack:AdjustSpeed(1.9)
        animTrack.TimePosition = startTime
        animTrack:AdjustSpeed(1.9) -- You already set speed to 2, so this line can be optional
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--[[Dash]]

local animationId = 10479335397 -- The animation ID to listen for
local player = game.Players.LocalPlayer -- Get the player
local character = player.Character or player.CharacterAdded:Wait() -- Get the player's character
local humanoid = character:WaitForChild("Humanoid") -- Get the humanoid

-- Function to handle the played animation
local function onAnimationPlayed(animationTrack)
    -- Check if the played animation matches the desired animation ID
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Load and play the new animation
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://17838006839" -- Dash animation ID
        local animTrack = humanoid:LoadAnimation(newAnim)

        -- Set the start time and play the animation
        local startTime = 0
        animTrack.TimePosition = startTime
        animTrack:Play()

        -- Adjust the speed of the animation
        animTrack:AdjustSpeed(1.3) -- Set your desired speed

        -- Stop the animation after 1.8 seconds
        delay(1.8, function()
            animTrack:Stop()
        end)
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)



--[[utl animation]]


-- Define animation ID to listen for
local animationId = 12342141464

-- Get the player and their character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid from the character
local humanoid = character:WaitForChild("Humanoid")

-- Define the function that runs when an animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the played animation matches the desired animation ID
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Load a new animation
        local newAnim = Instance.new("Animation")
        newAnim.AnimationId = "rbxassetid://15507137974"
        local animTrack = humanoid:LoadAnimation(newAnim)

        -- Set the start time and adjust the speed
        local startTime = 0
        animTrack:Play()
        animTrack:AdjustSpeed(1)
        animTrack.TimePosition = startTime
        animTrack:AdjustSpeed(1) -- You already set speed to 2, so this line can be optional
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

